processing pass 0: int_type_checker
program: int state_1;int state_0;struct Packet{
int loss;int qlen;int pkt_0;int link_idle;int cond1;int pkt_1;};void func( struct Packet p) {p.pkt_1=p.pkt_0-10;if (1==1&&1==1&&p.pkt_1>state_1) {state_0=state_0+1;state_1=p.pkt_0;;;; };}
...pass 1 done.
processing pass 1: desugar_comp_asgn
program: int state_1;int state_0;struct Packet{
int loss;int qlen;int pkt_0;int link_idle;int cond1;int pkt_1;};void func( struct Packet p) {p.pkt_1=p.pkt_0-10;if (1==1&&1==1&&p.pkt_1>state_1) {state_0=state_0+1;state_1=p.pkt_0;;;;;;;; };;;}
...pass 2 done.
processing pass 2: if_converter
if_convert: visiting statemenent p.pkt_1 = p.pkt_0 - 10
if_convert: visiting statemenent state_0 = state_0 + 1
if_convert: visiting statemenent state_1 = p.pkt_0
program: int state_1;int state_0;struct Packet{
int loss;int qlen;int pkt_0;int link_idle;int cond1;int pkt_1;int _br_tmp0;};void func( struct Packet p) {p.pkt_1 = (1 ? (p.pkt_0 - 10) :  p.pkt_1);p._br_tmp0 = (1 ? (1 == 1 && 1 == 1 && p.pkt_1 > state_1) : 0);state_0 = ((1 && p._br_tmp0) ? (state_0 + 1) :  state_0);state_1 = ((1 && p._br_tmp0) ? (p.pkt_0) :  state_1);}
...pass 3 done.
processing pass 3: algebra_simplify
program: int state_1;int state_0;struct Packet{
int loss;int qlen;int pkt_0;int link_idle;int cond1;int pkt_1;int _br_tmp0;};void func( struct Packet p) {p.pkt_1=((p.pkt_0-10));p._br_tmp0=((p.pkt_1>state_1));state_0=((p._br_tmp0) ? (1+state_0) : state_0);state_1=((p._br_tmp0) ? (p.pkt_0) : state_1);}
...pass 4 done.
processing pass 4: array_validator
program: int state_1;int state_0;struct Packet{
int loss;int qlen;int pkt_0;int link_idle;int cond1;int pkt_1;int _br_tmp0;};void func( struct Packet p) {p.pkt_1=((p.pkt_0-10));p._br_tmp0=((p.pkt_1>state_1));state_0=((p._br_tmp0) ? (1+state_0) : state_0);state_1=((p._br_tmp0) ? (p.pkt_0) : state_1);}
...pass 5 done.
processing pass 5: stateful_flanks
program: int state_1;int state_0;struct Packet{
int loss;int qlen;int pkt_0;int link_idle;int cond1;int pkt_1;int _br_tmp0;int state_00;int state_10;};void func( struct Packet p) {p.state_00 = state_0;p.state_10 = state_1;

p.pkt_1 = ((p.pkt_0-10));p._br_tmp0 = ((p.pkt_1>p.state_10));p.state_00 = ((p._br_tmp0) ? (1+p.state_00) : p.state_00);p.state_10 = ((p._br_tmp0) ? (p.pkt_0) : p.state_10);

state_0 = p.state_00;state_1 = p.state_10;}
...pass 6 done.
processing pass 6: ssa
program: int state_1;int state_0;struct Packet{
int loss;int qlen;int pkt_0;int link_idle;int cond1;int pkt_1;int _br_tmp0;int state_00;int state_10;int state_000;int state_100;int pkt_10;int _br_tmp00;int state_001;int state_101;};void func( struct Packet p) {p.state_000 = state_0;p.state_100 = state_1;p.pkt_10 = ((p.pkt_0-10));p._br_tmp00 = ((p.pkt_10>p.state_100));p.state_001 = ((p._br_tmp00) ? (1+p.state_000) : p.state_000);p.state_101 = ((p._br_tmp00) ? (p.pkt_0) : p.state_100);state_0 = p.state_001;state_1 = p.state_101;}
...pass 7 done.
processing pass 7: expr_propagater
program: int state_1;int state_0;struct Packet{
int loss;int qlen;int pkt_0;int link_idle;int cond1;int pkt_1;int _br_tmp0;int state_00;int state_10;int state_000;int state_100;int pkt_10;int _br_tmp00;int state_001;int state_101;};void func( struct Packet p) {p.state_000=state_0;p.state_100=state_1;p.pkt_10=p.pkt_0 - 10;p._br_tmp00=p.pkt_10 > p.state_100;p.state_001=(p._br_tmp00) ? (1 + p.state_000) : p.state_000;p.state_101=(p._br_tmp00) ? (p.pkt_0) : p.state_100;state_0=(p._br_tmp00) ? (1 + p.state_000) : p.state_000;state_1=(p._br_tmp00) ? (p.pkt_0) : p.state_100;}
...pass 8 done.
processing pass 8: expr_flattener
program: int state_1;int state_0;struct Packet{
int loss;int qlen;int pkt_0;int link_idle;int cond1;int pkt_1;int _br_tmp0;int state_00;int state_10;int state_000;int state_100;int pkt_10;int _br_tmp00;int state_001;int state_101;int tmp0;int tmp1;};void func( struct Packet p) {p.state_000 = state_0;p.state_100 = state_1;p.pkt_10 = p.pkt_0 - 10;p._br_tmp00 = p.pkt_10 > p.state_100;p.tmp0 = 1 + p.state_000;p.state_001 = (p._br_tmp00) ? p.tmp0 : p.state_000;p.state_101 = (p._br_tmp00) ? (p.pkt_0) : p.state_100;p.tmp1 = 1 + p.state_000;state_0 = (p._br_tmp00) ? p.tmp1 : p.state_000;state_1 = (p._br_tmp00) ? (p.pkt_0) : p.state_100;}
...pass 9 done.
int state_1;int state_0;struct Packet{
int loss;int qlen;int pkt_0;int link_idle;int cond1;int pkt_1;int _br_tmp0;int state_00;int state_10;int state_000;int state_100;int pkt_10;int _br_tmp00;int state_001;int state_101;int tmp0;int tmp1;};void func( struct Packet p) {p.state_000 = state_0;p.state_100 = state_1;p.pkt_10 = p.pkt_0 - 10;p._br_tmp00 = p.pkt_10 > p.state_100;p.tmp0 = 1 + p.state_000;p.state_001 = (p._br_tmp00) ? p.tmp0 : p.state_000;p.state_101 = (p._br_tmp00) ? (p.pkt_0) : p.state_100;p.tmp1 = 1 + p.state_000;state_0 = (p._br_tmp00) ? p.tmp1 : p.state_000;state_1 = (p._br_tmp00) ? (p.pkt_0) : p.state_100;}
